{"version":3,"sources":["components/container.module.css","serviceWorker.js","components/Avatar.js","components/Message.js","components/MessageList.js","components/container.js","components/SendMessageForm.js","components/App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","palette","Avatar","hex","lum","String","replace","length","c","i","rgb","parseInt","substr","Math","round","min","max","toString","name","sum","charCodeAt","src","this","props","ColorLuminance","name2Color","alt","className","React","Component","Message","user","sender","content","time","MessageList","prevProps","prevState","innerHeight","pageYOffset","document","body","scrollHeight","snapshot","scrollTo","dt","Date","hours","getHours","AmOrPm","minutes","getMinutes","floor","random","key","style","position","top","left","visibility","spinner","textAlign","margin","id","getFunnyLoadingMessage","messages","map","message","index","getTime","Container","children","containerStyles","container","SendMessageForm","insertEmoji","emoji","setState","emojiActive","handleChange","bind","handleSubmit","e","target","value","sendMesssage","showPreview","showSkinTones","onSelect","native","float","display","onChange","placeholder","type","aria-label","onKeyUp","preventDefault","onClick","App","sendMessage","text","fetch","method","headers","JSON","stringify","now","currentUser","response","status","showSpinner","json","data","prompt","addEventListener","enqueueSnackbar","autoHideDuration","action","Button","color","closeSnackbar","Pusher","cluster","subscribe","Helmet","htmlAttributes","lang","href","rel","withSnackbar","ReactDOM","render","maxSnack","anchorOrigin","vertical","horizontal","getElementById","URL","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.323c91fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__28YKj\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\n// noinspection SpellCheckingInspection\nconst palette = [\n  'ff5252',\n  '536dfe',\n  'ff4081',\n  'e040fb',\n  'ff6e40',\n  '448aff',\n  '18ffff',\n  'ffd740',\n  '64ffda',\n  '40c4ff',\n  '69f0ae',\n  '7c4dff',\n  'eeff41',\n  'b2ff59',\n  'ffff00',\n  'ffab40'\n]\n\nclass Avatar extends React.Component {\n  ColorLuminance (hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '')\n    if (hex.length < 6) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n    }\n    lum = lum || 0\n\n    // convert to decimal and change luminosity\n    let rgb = ''\n    let c\n    let i\n    for (i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i * 2, 2), 16)\n      c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16)\n      rgb += ('00' + c).substr(c.length)\n    }\n\n    return rgb\n  }\n\n  name2Color (name) {\n    let sum = 0\n    let x\n    for (x of name) {\n      sum += x.charCodeAt(0)\n    }\n    return sum\n  }\n\n  render () {\n    return (\n      <img\n        src={\n          'https://ui-avatars.com/api/?rounded=true&bold=true&size=64&name=' +\n          this.props.name +\n          '&background=' +\n          this.ColorLuminance(palette[this.name2Color(this.props.name) % 16], 1) +\n          '&color=' +\n          this.ColorLuminance(palette[this.name2Color(this.props.name) % 16], -0.25)\n        }\n        alt={this.props.name}\n        className='avatar'\n      />\n    )\n  }\n}\n\nexport default Avatar\n","import React from 'react'\nimport Avatar from './Avatar'\n\nclass Message extends React.Component {\n  render () {\n    if (this.props.user !== this.props.sender.name) {\n      return (\n        <div>\n          <Avatar\n            name={this.props.sender.name}\n          />\n          <span\n            className='message message-left'\n          >\n            {this.props.content}{' '}\n            <span className='time'>\n              {this.props.time}\n            </span>\n          </span>\n          <div\n            className='sender'\n          >\n            <b>{this.props.sender.name}</b>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <span\n          className='message message-right'\n        >\n          {this.props.content}{' '}\n          <span className='time'>\n            {this.props.time}\n          </span>\n        </span>\n      )\n    }\n  }\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nclass MessageList extends React.Component {\n  getSnapshotBeforeUpdate (prevProps, prevState) {\n    return (\n      window.innerHeight + window.pageYOffset + 100 >=\n      document.body.scrollHeight\n    )\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    if (snapshot) {\n      window.scrollTo(0, document.body.scrollHeight)\n    }\n  }\n\n  getTime (time) {\n    const dt = new Date(time)\n    let hours = dt.getHours() // gives the value in 24 hours format\n    const AmOrPm = hours >= 12 ? 'pm' : 'am'\n    hours = hours % 12 || 12\n    let minutes = String(dt.getMinutes())\n    minutes = minutes.length === 2 ? minutes : '0' + minutes\n    return hours + ':' + minutes + ' ' + AmOrPm\n  }\n\n  getFunnyLoadingMessage() {\n    let funnyMessages = [\n      \"Consulting about the app with internet monkeys...\",\n      \"Oh, I'm supposed to actually load the page\",\n      \"Adding Randomly Mispeled Words Into Text\",\n      \"Everything is completely fine, don't panic!\",\n      \"Proving that 1+1=3...\",\n      \"Blowing up creepers...\",\n      \"Task failed successfully\",\n      \"Trying to stop data from exploding\",\n      \"Contacting minions for support...\"\n    ]\n    return funnyMessages[Math.floor(Math.random() * 9)]\n  }\n\n  render () {\n    return (\n      <div>\n        <div\n          key={-1}\n          className='message-spacing-container'\n        />\n        <div style={{position: \"fixed\", top: \"40%\", left: \"40%\", visibility: this.props.spinner ? \"visible\" : \"hidden\", textAlign: \"center\"}}>\n          <div className=\"sk-fold\" style={{margin: \"auto\"}}>\n            <div className=\"sk-fold-cube\"/>\n            <div className=\"sk-fold-cube\"/>\n            <div className=\"sk-fold-cube\"/>\n            <div className=\"sk-fold-cube\"/>\n          </div>\n          <p id={\"loading-message-1\"}>Please wait while we load your app</p>\n          <p id={\"loading-message-2\"}>{this.getFunnyLoadingMessage()}</p>\n        </div>\n        {this.props.messages.map((message, index) => {\n          return (\n            <div\n              key={index}\n              className='message-container'\n            >\n              <Message\n                content={message.content}\n                time={this.getTime(message.time)}\n                sender={message.sender}\n                key={index}\n                user={\n                  this.props.user.name\n                }\n              />\n            </div>\n          )\n        })}\n        <div\n          key={-2}\n          className='message-spacing-container'\n        />\n      </div>\n    )\n  }\n}\n\nexport default MessageList\n","import React from 'react'\nimport containerStyles from './container.module.css'\n\nexport default function Container ({ children }) {\n  return <div className={containerStyles.container}>{children}</div>\n}\n","import React from \"react\"\nimport \"emoji-mart/css/emoji-mart.css\"\nimport { Picker } from \"emoji-mart\"\n\nclass SendMessageForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: \"\",\n      emojiActive: false,\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      message: e.target.value,\n    })\n  }\n\n  handleSubmit() {\n    this.props.sendMesssage(this.state.message)\n    this.setState({\n      message: \"\",\n      emojiActive: false\n    })\n  }\n\n  // eslint-disable-next-line\n  insertEmoji = (\n    emoji\n  ) => this.setState({ message: this.state.message + emoji[\"native\"] })\n\n  render() {\n    return (\n      <div\n        className={\"send-message-form\"}\n      >\n        <Picker\n          showPreview={false}\n          showSkinTones={false}\n          onSelect={this.insertEmoji.bind(this)}\n          native={true}\n          style={{\n            float: \"right\",\n            display: this.state.emojiActive ? \"inline-block\" : \"none\",\n          }}\n        />\n        <input\n          onChange={this.handleChange}\n          value={this.state.message}\n          placeholder=\"Type your message\"\n          type=\"text\"\n          aria-label={\"Type your message here and press enter or the send button\"}\n          onKeyUp={e => {\n            e.preventDefault()\n            if (e.key === \"Enter\") {\n              this.handleSubmit()\n            }\n          }}\n        />\n        <button\n          className=\"material-icons\"\n          onClick={() =>\n            this.setState({ emojiActive: !this.state.emojiActive })\n          }\n        >\n          insert_emoticon\n        </button>\n        <button\n          className=\"material-icons\"\n          onClick={this.handleSubmit}\n        >\n          send\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default SendMessageForm\n","import React from \"react\"\nimport MessageList from \"./MessageList\"\nimport Container from \"./container\"\nimport \"./index.css\"\nimport Helmet from \"react-helmet\"\nimport SendMessageForm from \"./SendMessageForm\"\nimport Pusher from \"pusher-js\"\nimport { withSnackbar } from 'notistack';\nimport { Button } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      messages: [],\n      showSpinner: true\n    }\n\n    this.currentUser = {\n      name: \"\",\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://serene-harbor-69710.herokuapp.com/getMessages\")\n      .then(response => response.json())\n      .then(data => {\n          this.setState({showSpinner: false})\n          this.currentUser.name = prompt(\"What is your name?\")\n          this.setState(data)\n          window.addEventListener(\"beforeinstallprompt\", e => {\n            e.preventDefault()\n            const action = key => (\n              <>\n                <Button style={{color: \"#98fb98\"}} onClick={() => {\n                  e.prompt()\n                  this.props.closeSnackbar(key)\n                }}>Install</Button>\n                <Button style={{color: \"#c8c8c8\"}} onClick={() => {this.props.closeSnackbar(key)}}>Dismiss</Button>\n              </ >\n            )\n            this.props.enqueueSnackbar(\"This website can be installed as an app.\", {\n              autoHideDuration: 7000,\n              action\n            })\n          })\n        }\n      )\n\n    let pusher = new Pusher(\"9e576f7c73eac65c8bbf\", {\n      cluster: \"ap4\",\n    })\n    let channel = pusher.subscribe(\"chatroom_xyz\")\n    channel.bind(\"message\", message =>\n      this.setState({ messages: [...this.state.messages, message] })\n    )\n  }\n\n  // eslint-disable-next-line\n  sendMessage = text => {\n    if (text) {\n      fetch(\n        \"https://serene-harbor-69710.herokuapp.com/sendMessage\",\n        {\n          method: \"post\",\n          headers: { \"Content-type\": \"application/json\" },\n          body: JSON.stringify({\n            content: text,\n            time: Date.now(),\n            sender: this.currentUser,\n          }),\n        }\n      ).then(response => {\n        if (response.status !== 200) {\n          console.error(`Error! ${response.status}`)\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Helmet htmlAttributes={{ lang: 'en' }}>\n          <title>Chat'n'go</title>\n          <link\n            href=\"https://fonts.googleapis.com/icon?family=Material+Icons&display=swap\"\n            rel=\"stylesheet\"\n          />\n        </Helmet>\n        <MessageList messages={this.state.messages} spinner={this.state.showSpinner} user={this.currentUser}/>\n        <SendMessageForm sendMesssage={this.sendMessage.bind(this)} />\n      </Container>\n    )\n  }\n}\n\nexport default withSnackbar(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./components/App\"\nimport \"spinkit/spinkit.min.css\"\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center'}}\n    >\n      <App />\n    </SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}